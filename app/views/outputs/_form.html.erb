<%#= f.error_notification %>
<%#= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>

<%= f.simple_fields_for :input_fields, @output.input_fields do |field| %>
  <div class="row mb-3">
    <div class="form-inputs col-8">
      <%= field.hidden_field :key %>
      <%= field.hidden_field :example_field_id %>
      <%= field.input :value, input_html: {
        class: 'form-control bg-light rounded-2 custom-shaddow',
        data: {
          action: "input->realtime-fields#changeText",
          id: field.object.example_field_id,
          realtime_fields_target: "input"
        }},
        placeholder: "Add #{field.object.example_field.key.titleize.downcase}",
        label: field.object.example_field.key.titleize.capitalize
      %>    </div>
  </div>
<% end %>

<div class="d-flex gap-3 my-3">
  <%= f.submit output.persisted? ? 'Update Text' : "Create Text" ,class: 'btn btn-primary' %>

  <% if output.persisted? %>
    <%= link_to 'Back', edit_example_path(@example), class: 'btn my-btn-light' %>
  <% else %>
    <%= link_to 'Back', :back, class: 'btn my-btn-light' %>
  <% end %>
</div>
